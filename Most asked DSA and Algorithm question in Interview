Q>////////////////////////////////////////////////////////
Find the second largest element in array.

class Program
{
    public static void Main(string[] args)
    {
        int[] arr = { 4, 6, 7, 5, 6, 8, 9, 4, 5, 7, };
        Console.WriteLine(FindSecondLargestNumber(arr));
    }
    public static int FindSecondLargestNumber(int[] arr)
    {
        if (arr.Length < 2)
        {
            throw new ArgumentException("their is no second largest ");
        }
        int firstLargest = int.MinValue;
        int secondLargest = int.MinValue;

        foreach(int num in arr)
        {
            if (num > firstLargest)
            {
                secondLargest = firstLargest;
                firstLargest = num;
            }

            else if (num > secondLargest && num != firstLargest)
            {
                secondLargest = num;
            }
        }
        if(secondLargest == int.MinValue)
        {
           throw new InvalidOperationException("their is no largest number exits");
        }
          

        return secondLargest;
    }
}
  ///////////////////////////////////////////////////////Reverse String the string

class Program
{
    public static void Main(string[] args)
    {
        string str = "Hello, World!";
        Console.WriteLine(ReverseString(str));
    }

    public static string ReverseString(string str)
    {
       if(string.IsNullOrEmpty(str))
        {
            return "String is null or empty";

        }
        char[] chararray = str.ToCharArray();
        Array.Reverse(chararray);
        return new string(chararray);


    }
}

//////////////////////////////////////input : Abhishek kumar singh , output : singh kumar Abhishek

using System.Text;

class Program
{
    public static void Main(string[] args)
    {
        string str = "Abhishek";
        Console.WriteLine(ReverseWordOrder(str));
    }

    public static string ReverseWordOrder(string str)
    {
        int i;
        StringBuilder sb = new StringBuilder();
        int Start = str.Length - 1;
        int End = str.Length - 1;

        while(Start > 0)
        {
            if (str[Start] == ' ')
            {
                i = Start + 1;
                while(i <= End)
                {
                    sb.Append(str[i]);
                    i++;
                }
                sb.Append(' ');
                End = Start - 1;
            }

            Start--;
        }
        for(i = 0; i <= End; i++)
        {
            sb.Append(str[i]);
        }
        return sb.ToString();
    }
}
///////////////////////////////////////
Find the First Non-Repeating Character in a String
Problem Statement:

> Given a string, find and return the first non-repeating character.
If there is no such character, return -1.

Example 1:

Input:  "aabbcddbe"
Output: 'c'

Example 2:

Input:  "aabbcc"
Output: -1


class Program
{
    public static void Main(string[] args)
    {
        String str = "aaabbbcccddfggghhrrr";
        char result = FindNonRepeatingCharacters(str);  
        if(result != '0')
        {
            Console.WriteLine("The first non-repeating character is: " + result);
        }
        else
        {
            Console.WriteLine("No non-repeating character found.");
        }

    }
    public static char FindNonRepeatingCharacters(String str)
    {
        Dictionary<char, int> keyValuePairs = new Dictionary<char, int>();

        foreach (char c in str)
        {
            if (keyValuePairs.ContainsKey(c))
            {
                keyValuePairs[c]++;
            }
            else
            {
                keyValuePairs.Add(c, 1);
            }
        }
            foreach (char ch in str)
            {
                if (keyValuePairs[ch] == 1)
                {
                    return ch;
                }
            }
        
            return '0';

        
    }
}
//////////////////////////////

Q.2: How to find if the given string is a palindrome or not?

 /////////////////////////////////////////////////////Q.4: How to reverse each word in a given string?
Ans.: The user will input a sentence and we need to reverse each word individually without changing its position in the sentence.
input: Welcome to Csharp corner, output: emocleW ot prahsC renroc

using System.Text;
using System.Collections.Generic;
using System;
class Program
{
    
    public static void Main(string[] args)
    {
        string str = "Abhishek is Intelligent boys";
        RSEW(str);
    }
    public static void RSEW(string str)
    {
        StringBuilder sb = new StringBuilder();
        List<char> ls = new List<char>();
        for(int i = 0 ; i < str.Length ; i++)
        {
            if(str[i] == ' ' || i == str.Length - 1 )
            {
                if(i == str.Length - 1)
                {
                    ls.Add(str[i]);
                }
                
                    for(int j = ls.Count - 1 ; j >= 0 ; j--)
                    {
                        sb.Append(ls[j]);
                    }
                    sb.Append(' ');
                    ls = new List<char>();
                
            }
            else
            {
                ls.Add(str[i]);
            }
        }
        Console.WriteLine(sb.ToString());
    }
}
//////////////////////////////////////Q.5: How to count the occurrence of each character in a string?

using System;
using System.Collections.Generic;

public class HelloWorld
{
public static void Main(string[] args)
 {
 string str = "Hello   world";
 FindCount(str);
     
 }

  public static void FindCount(string str)
  {
   Dictionary<char, int> dis = new Dictionary<char, int>();
     foreach (char ch in str)
       {
           if(ch != ' ')
           {
           if (dis.ContainsKey(ch))
          {
          dis[ch]++;
             }
             else
                {
               dis.Add(ch, 1);
                }
           }
       }
            foreach (var item in dis)
           {
       //  Console.WriteLine($"{item.Key}: {item.Value}");
         Console.WriteLine($"{item.Key} : {item.Value}");
          }
    }
}
///////////////////////////////////////////////Q.6: How to remove duplicate characters from a string?
The user will input a string and the method should remove multiple occurrences of characters in the string
input: csharpcorner, output: csharpone


using System;
using System.Text;
class Program
{
    public static void Main(string[] args)
    {
        string str = "abhishekkumarsingh" ;
        DCR(str);
    }
    public static void DCR(string str)
    {
        string sb = string.Empty;
        {
        for(int i = 0 ; i < str.Length ; i++)
        if(!sb.Contains(str[i]))
        {
            sb = sb + str[i];
        }
        }
        Console.WriteLine(sb.ToString());
    }
}
///////////////////////////////////////////Q.7: How to find all possible substring of a given string?
//input: abcd , output : a ab abc abcd b bc bcd c cd d

using System;
using System.Text;
class Program
{
    public static void Main(string[] args)
    {
        string str = "abcd";
        PosSub(str);
    }
    public static void PosSub(string str)
    {
        for(int i = 0 ; i < str.Length ; i++)
        {
        StringBuilder sb = new StringBuilder(str.Length - 1);
            for(int j = i ; j < str.Length ; j++)
             {
                sb.Append(str[j]);
                Console.Write(sb + " ");
             }
             
        }
    }
}
Q.8: How to perform Left circular rotation of an array?
 How to perform Left circular rotation of an array?
Ans.: The user will input an integer array and the method should shift each element of input array to its Left by one position in circular fashion. The logic is to iterate loop from Length-1 to 0 and swap each element with last element.

input: 1 2 3 4 5, output: 2 3 4 5 1
using System;


class Program
{
    public static void Main(String[] args)
    {
       int[] arr = {8,6,5,8,3,6,8,9,2,3,6,7,8};
       CrA(arr);
    }
     public static void CrA(int[] arr)
     {
         int a = arr[0];
         for(int i = 0 ; i < arr.Length - 1 ; i++)
          {
              arr[i] = arr[i + 1];
          }
          arr[arr.Length - 1] = a;
          foreach(var d in arr)
          {
              Console.Write(d + " ");
          }
     }
}
///////////////////////////////////Q.9: How to perform Right circular rotation of an array?
input: 1 2 3 4 5, output: 5,1,2,3,4

using System;

public class HelloWorld
{
    public static void Main(string[] args)
    {
        int[] arr = { 5, 1, 2, 3, 4 };
        RotateRight(arr);
    }
    public static void RotateRight(int[] arr)
    {
        int last = arr[arr.Length - 1];
        for (int i = arr.Length - 1 ; i > 0 ; i--)
        {
            arr[i] = arr[i - 1];
        }
        arr[0] = last;
        for (int j = 0; j < arr.Length; j++)
        {
            Console.WriteLine(arr[j]);
        }
    }
}
Q.10: How to find if a positive integer is a prime number or not?
using System;
class HelloWorld
{
    public static void Main(string[] args)
    {
    bool res = CheckPrime(25);
    Console.WriteLine(res);
}
public static bool CheckPrime(int n)
{
    if(n == 0 || n == 1)
    {
        return false;
    }
    if(n == 2 || n == 3)
    {
        return true;
    }
    if(n % 2 == 0 || n % 3 == 0)
    {
        return false;
    }
    for(int i = 5 ; i * i <= n ; i = i +  6)
    {
        if(n % i == 0 || n % (i + 2) == 0 )
        {
            return false;
        }
    }
    return true;
}
}
///////////////////////////////Q.11: How to find the sum of digits of a positive integer?
input: 168, output: 15
using System;
class Program
{
    public static void Main(string[] args)
    {
      int input = 0;
     Console.WriteLine(NumberSum(input));   
    }
    public static int NumberSum(int input)
    {
        int sum = 0;
        while(input != 0)
        {
            int rem = input % 10 ;
            sum = sum + rem ;
            input = input / 10 ;
        }
        return sum ;
    }
}
Q.13: How to find third largest integer in an array using only one loop?
input: 3 2 1 5 4, output: 3

using System;
class Program
{
    public static void Main(string[] args)
    {
        int[] arr = { 3, 2 ,5,7,8,3,6,9};
        Console.WriteLine(TLE(arr));
    }
    public static int TLE(int[] arr)
    {
        if (arr.Length < 3)
        {
            throw new ArgumentException("Array must have at least 3 elements");
        }
        int firstLg = int.MinValue;
        int secondLg =  int.MinValue;
        int thirdLg =  int.MinValue;
        for (int i = 0; i < arr.Length; i++)
        {
            if (arr[i] > firstLg )
            {
                thirdLg = secondLg;
                secondLg = firstLg;
                firstLg = arr[i];
            }
            else if (secondLg < arr[i] & arr[i] != firstLg)
            {
                
                thirdLg = secondLg;
                secondLg = arr[i];
            }
            else if (thirdLg < arr[i] & arr[i] != firstLg & arr[i] !=  secondLg)
            {
                thirdLg = arr[i];
            }
        }
        return thirdLg;

    }
}
/////////////////////////////////////////Q.14: How to convert a two-dimensional array to a one-dimensional array?

//input: { { 1, 2, 3 }, { 4, 5, 6 } }, output: 1 4 2 5 3 6
using System;
class Program
{
    public static void Main(string[] args)
    {
        int[,] arr1 = {{1,2,3},{4,5,6}};
        ConvertAndPrintArray(arr1);
    }
    public static void ConvertAndPrintArray(int[,] arr1)
    {
        int rows = arr1.GetLength(0);
        int cols = arr1.GetLength(1);
        int[] result = new int[rows * cols];
       
        int index = 0 ;
        
        for(int col = 0 ; col < cols ; col++)
        {
            for(int row = 0; row < rows ; row++)
            {
                result[index] = arr1[row, col];
                Console.Write(result[index] + " ");
                index++;
            }
        }
    }
}
Q.15: How to convert a one-dimensional array to a two-dimensional array?
// Online C# Editor for free
// Write, Edit and Run your C# code using C# Online Compiler
 //input: {1, 2, 3, 4, 5, 6} ,2 ,3
//output:
//1 2 3
//4 5 6

using System;

public class HelloWorld
{
    public static void Main(string[] args)
    {
        int[] arr = new int[] {1, 2, 3, 4, 5, 6};
        OneDToTwoD(arr, 2, 3);
    }

    public static void OneDToTwoD(int[] arr, int row, int col)
    {
        int index = 0;
        int[,] arr1 = new int[row, col];
        for (int i = 0; i < row; i++)
        {
            for (int j = 0; j < col; j++)
            {
                arr1[i, j] = arr[index];
                index++;
                Console.Write(arr1[i, j] + " ");
            }
            Console.WriteLine();
        }
    }
}

Q.16: How to find the angle between hour and minute hands of a clock at any given time?
Q.17: Explain Bubble Sort Algorithm In C#
Q.18: Explain Quick Sort Algorithm In C#
Q.19: Explain Merge Sort Algorithm In C#
Q. 20: Explain Insertion Sort Algorithm In C#
Q. 21: Explain Selection Sort Algorithm In C#
Q. 22: Explain Binary Search In C#

